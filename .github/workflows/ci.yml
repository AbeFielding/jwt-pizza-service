name: CI Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}

    services:
      mysql:
        image: mysql:8.0.29
        env:
          MYSQL_ROOT_PASSWORD: tempdbpassword
          MYSQL_DATABASE: pizza
        ports:
          - '3306:3306'
        options: >-
          --health-cmd "mysqladmin ping -ptempdbpassword"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: eslint . --config eslint.config.cjs --max-warnings=0

      - name: Write config file
        run: |
          echo "module.exports = {
            jwtSecret: '${{ secrets.JWT_SECRET }}',
            db: {
              connection: {
                host: '127.0.0.1',
                user: 'root',
                password: 'tempdbpassword',
                database: 'pizza',
                connectTimeout: 60000
              },
              listPerPage: 10
            },
            factory: {
              url: 'https://pizza-factory.cs329.click',
              apiKey: '${{ secrets.FACTORY_API_KEY }}'
            }
          };" > src/config.js

      - name: Tests
        run: npm test

      - name: set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > src/version.json

      - name: Update coverage (create badge)
        run: |
          sudo apt-get update && sudo apt-get install -y jq bc curl
          coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          color=$(awk -v c="$coverage" 'BEGIN{print (c<80)?"red":"green"}')
          echo "Posting badge: coverage=$coverage color=$color"
          echo "POST -> /api/badge/${{ secrets.NET_ID }}/jwtpizzaservicecoverage"

          # Show response headers & body so we can verify success or auth errors
          curl -i -X POST \
            "https://pizza-factory.cs329.click/api/badge/${{ secrets.NET_ID }}/jwtpizzaservicecoverage?label=Coverage&value=${coverage}%25&color=${color}" \
            -H "authorization: bearer ${{ secrets.FACTORY_API_KEY }}"

          echo ""
          echo "Fetch badge back (should be 200):"
          curl -i "https://pizza-factory.cs329.click/api/badge/${{ secrets.NET_ID }}/jwtpizzaservicecoverage"
